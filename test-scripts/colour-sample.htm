<!DOCTYPE html>
<html>
<head>
<title>Peckham Sentiment</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
<!-- <meta name="viewport" content="width = device-width, initial-scale = 1.0 ,  minimum-scale = 1.0,  maximum-scale=1.0"> -->

<link href="base.css" type="text/css" rel="stylesheet"/>
<style type="text/css">
	body {
		border:10px solid #ff624a;
		overflow: hidden;
		background: #e6e6e6;
	}
	
</style>
</head>
<body>


<script type="text/javascript" src="colour-thief.js"></script>
<script type="text/javascript">

// create canvas
var canvas; 

// canvas context
var context;

// size of body
var body_size = {};

// colour theif
var colour_thief;

var images = [
	
	{
		"x" : 800,
		"y" : 120,
		"asset" : "../samples/franks.jpg",
		"inner_radius" : 0,
		"outer_radius" : 170,
		"radius" : 90
	},
	{
		"x" : 100,
		"y" : 100,
		"asset" : "../samples/bar-story.jpg",
		"inner_radius" : 0,
		"outer_radius" : 170,
		"radius" : 90
	},
	
	{
		"x" : 400,
		"y" : 500,
		"asset" : "../samples/peckham-rye.jpg",
		"inner_radius" : 0,
		"outer_radius" : 170,
		"radius" : 90
	},
	{
		"x" : 300,
		"y" : 100,
		"asset" : "../samples/brick-brewery.jpg",
		"inner_radius" : 0,
		"outer_radius" : 170,
		"radius" : 90
	}
];

var sentiments = new Array();

// start
document.addEventListener("DOMContentLoaded", function() {
      
    // Add and get the canvas context
	canvas = document.createElement("canvas");
	document.body.appendChild(canvas);
	context = canvas.getContext('2d');
	
	// boom!
	sizing();
	
	//init color theif
	colour_thief = new ColorThief();
	
	// make sure that the loaded function only fires once
	var all_loaded = false;
	// Load in an image and sample it
	for(var a = 0, length = images.length; a<length; a++) {
		
		var image = new Image();
		var data = images[a];

		// check that everything is loaded then render them out
		image.addEventListener("load", function(evt){
			if(a>=length && all_loaded === false) { 
				draw();	
				all_loaded = true;
			}
		});
		
		image.setAttribute("src",data.asset);
		
		// create the circle
		var sentiment = new create_gradient(data.x,data.y,data.inner_radius, data.outer_radius, data.radius, image);			sentiments.push(sentiment);	
	}
	
});

// draws out all the circles
function draw() {
   
    context.clearRect(0, 0, body_size.width, body_size.height);
     
    for (var i = 0; i < sentiments.length; i++) {
        var rendered_circle = sentiments[i];
        rendered_circle.update();
    }
}

var create_gradient = function(x,y,inner_radius, outer_radius, radius, asset) {
	
	var self = this; 
	
	this.x = x,
	this.y = y,
	this.inner_radius = inner_radius,
	this.outer_radius = outer_radius,
	this.radius = radius, 
	this.asset = asset;
	this.update = function(){
		
		var prominent_colour = colour_thief.getColor(asset);
		var colour_palette = colour_thief.getPalette(asset);
	
		// Create gradients
	//	var gradient = context.createRadialGradient(self.x, self.y, self.inner_radius, self.x, self.y, self.outer_radius);
	var gradient = context.createLinearGradient(self.x, self.y, self.inner_radius, self.x, self.y, self.outer_radius);
		
		gradient.addColorStop(1, 'rgba('+prominent_colour.toString()+',1)');
		gradient.addColorStop(0.1, 'rgba('+colour_palette[2].toString()+',1)');
		 
		// draw shapes
		context.beginPath();
		context.arc(self.x, self.y, self.radius, 0, 2 * Math.PI);
		context.closePath();
		context.fillStyle = gradient;
		context.fill();

	}
	
	return this;
}

function sizing() {
	body_size = document.body.getBoundingClientRect();
	canvas.width = body_size.width;
	canvas.height = body_size.height;	
}


 
	


</script>

</body>
</html>